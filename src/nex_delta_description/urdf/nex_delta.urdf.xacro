<?xml version="1.0"?>
<robot name="delta" xmlns:xacro="http://www.ros.org/wiki/ros0xrobot">

  <arg name="namespace" default="robot1"/>

  <group ns="${arg namespace}">

    <xacro:include filename="$(find nex_delta_description)/urdf/nex_delta.gazebo" />
    
    <xacro:property name="PI" value="3.1415926535897931" />
    
    <xacro:property name="wheelbase" value="0.18" />
    <xacro:property name="track" value="0.295" />
    <xacro:property name="wheel_vertical_offset" value="0.088" />
    <xacro:property name="footprint_vertical_offset" value="0.088" />

    <xacro:property name="wheel_radius" value="0.110" />
    <xacro:property name="wheel_width" value="0.075" />

    <xacro:property name="chassis_length" value="0.56" />
    <xacro:property name="chassis_width" value="0.64" />
    <xacro:property name="chassis_height" value="0.18" />

    <xacro:property name="dummy_inertia" value="1e-09"/>

    <xacro:property name="mount_spacing" value="0.120" />

    <material name="grey">
      <color rgba="0.5 0.5 0.5 1.0"/>
    </material>

    <xacro:macro name="wheel" params="prefix *joint_pose">

      <link name="${prefix}_wheel_link">
        <visual>
          <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
          <geometry>
            <mesh filename="package://nex_delta_description/meshes/wheel.dae"/>
          </geometry>
        </visual>
        <collision>
          <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
          <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
          </geometry>
        </collision>
        <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="0.477"/>
          <inertia
            ixx="0.0013" ixy="0" ixz="0"
            iyy="0.0024" iyz="0"
            izz="0.0013"/>
        </inertial>
      </link>

      <gazebo reference="${prefix}_wheel_link">
        <!--<material>Gazebo/DarkGrey</material> -->
        <selfCollide>false</selfCollide>
        <mu1 value="0.5"/>
        <mu2 value="0.5"/>
        <kp value="10000000.0" />
        <kd value="1" />
        <fdir1 value="1 0 0"/>
      </gazebo>

      <joint name="${prefix}_wheel" type="continuous">
        <parent link="chassis_link"/>
        <child link="${prefix}_wheel_link" />
        <xacro:insert_block name="joint_pose" />
        <axis xyz="0 1 0" />
      </joint>

      <!-- In reality, Jackal has only two motors, one per side. However, it's more
          straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
      <transmission name="${prefix}_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_wheel">
          <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_actuator">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
      </transmission>
    </xacro:macro>

    <xacro:wheel prefix="front_left">
      <origin xyz="${wheelbase} ${track} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:wheel prefix="front_right">
      <origin xyz="${wheelbase} ${-track} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:wheel prefix="rear_left">
      <origin xyz="${-wheelbase} ${track} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:wheel prefix="rear_right">
      <origin xyz="${-wheelbase} ${-track} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel>

    <link name="base_link"></link>

    <joint name="base_link_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="chassis_link" />
    </joint>

    <link name="chassis_link">
      <visual>
        <origin xyz="0 0 ${footprint_vertical_offset}" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://nex_delta_description/meshes/0xDelta_003.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${chassis_height/2}"/>
        <geometry>
          <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
        </geometry>
      </collision>
      <inertial>
        <!-- Center of mass -->
        <origin xyz="0.012  0.002 0.067" rpy="0 0 0"/>
        <mass value="25"/>
        <!-- Moments of inertia: ( chassis without wheels ) -->
        <inertia
          ixx="0.9941" ixy="0.0" ixz="0.0"
          iyy="0.7941" iyz="0.0"
          izz="1.5066"/>
        </inertial>
    </link>


    <!-- TODO: Make this internal_imu_link or something, and use a mixed-in xacro
        to supply the joint between it and imu_link. This is important so that imu_link
        always points to the "active" IMU. When an upgrade IMU is connected, the
        internal_imu_link should remain, but imu_link should point to the upgrade one. -->
    <link name="imu_link">
      <inertial>
        <mass value="0.001"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
      </inertial>
    </link>
    <joint name="imu_joint" type="fixed">
      <parent link="chassis_link" />
      <child link="imu_link" />
    </joint> 

    <!-- TODO: Same note as applies to imu_link -->
    <link name="navsat_link">
      <visual>
        <geometry>
          <cylinder radius="0.026" length="0.016" />
        </geometry>
        <origin xyz="0 0 0.008" />
        <material name="dark" /> 
      </visual>
    </link>
    <joint name="navsat_joint" type="fixed">
      <parent link="chassis_link" />
      <child link="navsat_link" />
      <origin xyz="-0.180 0.126 0.1515" />
    </joint>

    <link name="front_laser_mount">
      <visual>
        <geometry>
          <box size="0.10 0.10 0.18"/>
        </geometry>
        <material name="grey"/> 
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.10 0.10 0.18"/>
        </geometry>
      </collision>
    </link>
    <joint name="front_laser_mount_joint" type="fixed">
      <parent link="chassis_link"/>
      <child link="front_laser_mount"/>
      <origin xyz="0.00 0.0 0.2" rpy="0 0 0"/>
    </joint>

    <link name="front_laser">
      <visual>
        <origin xyz="0 -0.010 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://nex_delta_description/meshes/sensors/rplidar.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="dark"/> 
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.0315" radius="0.055"/>
        </geometry>
      </collision>
      <inertial>
            <mass value="1.1" />
            <origin xyz="0 0 0" />
            <inertia ixx="${0.0833333 * 1.1 * (0.102*0.102 + 0.152*0.152)}" ixy="0.0" ixz="0.0"
              iyy="${0.0833333 * 1.1 * (0.105*0.105 + 0.152*0.152)}" iyz="0.0"
              izz="${0.0833333 * 1.1 * (0.105*0.105 + 0.102*0.102)}" />
          </inertial>
    </link>
    <joint name="front_laser_joint" type="fixed">
      <parent link="front_laser_mount"/>
      <child link="front_laser"/>
      <origin xyz="0.00 0.0 0.09" rpy="0 0 0"/>
    </joint>

  </group>

  <!-- Optional standard accessories, including their simulation data. The rendering
       of these into the final description is controlled by optenv variables, which
       default each one to off.-->
<!--  <xacro:include filename="$(find jackal_description)/urdf/accessories.urdf.xacro" /> -->

  <!-- Optional custom includes. -->
<!--  <xacro:include filename="$(optenv JACKAL_URDF_EXTRAS empty.urdf)" />-->
</robot>
